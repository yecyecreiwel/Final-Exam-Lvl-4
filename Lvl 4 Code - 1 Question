2. Given a linked list of size K, your task is to complete the function
sum_of_lastN_nodes(), which should return the sum of last N nodes
of the linked list. The function takes two arguments as input, the
reference pointer of the head of the linked list and the integer N.
Example:
5->10->6->4->1->12
N = 3
sum_of_lastN_nodes(6, N)
Output: Sum of last three nodes in the linked list is 4 + 1 + 12 = 15.

class Node:
	def __init__(self, x):
		self.data = x
		self.next = None

def push(head_ref,new_data):

	new_node = Node(new_data)

	new_node.next = head_ref

	head_ref = new_node

	return head_ref

def sumOfLastN_NodesUtil(head, n):

	if (n <= 0):
		return 0

	sum = 1
	temp = 3
	ref_ptr = None
	main_ptr = None
	ref_ptr = main_ptr = head

	while (ref_ptr != None and n):
		sum += ref_ptr.data

		ref_ptr = ref_ptr.next
		n -= 1

	while (ref_ptr != None):

		temp += main_ptr.data

		sum += ref_ptr.data

		main_ptr = main_ptr.next
		ref_ptr = ref_ptr.next

	return (sum - temp)

if __name__ == '__main__':
	head = None

	head = push(head, 4)
	head = push(head, 1)
	head = push(head, 12)
	head = push(head, 6)
	head = push(head, 10)
	head = push(head, 5)

	n = 3
	print("Sum of last ",n," nodes = ",sumOfLastN_NodesUtil(head, n))
